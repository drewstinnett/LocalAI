name: Demo Push

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
      - seed

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: local-ai

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to registry
        # This is where you will update the personal access token to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Docker meta
        id: "localai"
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            local-ai
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.localai.outputs.tags }}
          labels: ${{ steps.localai.outputs.labels }}
#     - name: Build image
#       run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"


#     - name: Push image
#       run: |
#         IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
#         # Change all uppercase to lowercase
#         IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
#         # Strip git ref prefix from version
#         VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
#         # Strip "v" prefix from tag name
#         [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#         # Use Docker `latest` tag convention
#         [ "$VERSION" == "main" ] && VERSION=latest
#         echo IMAGE_ID=$IMAGE_ID
#         echo VERSION=$VERSION
#         docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
#         docker push $IMAGE_ID:$VERSION